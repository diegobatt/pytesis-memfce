## Distancia de Fermat {#sec-intro-fermat}

En una gran cantidad de aplicaciones de aprendizaje automático resulta de crucial importancia la elección de una medida de distancia apropiada para representar el espacio, como por ejemplo, durante la construcción de diagramas de persistencia desarrollados durante esta Tesis. Un enfoque a la hora de elegir esta medida es dejar que la misma se infiera a partir de los datos, en vez de ser elegida arbitrariamente. Este enfoque resulta de particular interés cuando la data proviene de una variedad desconocida de dimensión menor, siendo esto una situación típica en distintos tipos de aplicaciones [@RepresentationLearningBengio]. Para atacar este problema usaremos la distancia de Fermat, que se define a continuación:

Sea una muestra de $N$ puntos

$$\mathcal{S}_{N} = \{\mathbf{x}_1, \dots, \mathbf{x}_N \} \subset \mathcal{M}$$

Donde $\mathcal{M} \subseteq \mathbb{R}^D$ es una variedad de dimensión $d \geq 1$ y tal que $d \ll D$. Sea además $l(\cdot, \cdot)$ una función de distancia definida en $\mathcal{M} \times \mathcal{M}$ (Siendo una opción típica la distancia Euclídea, pero pudiendo ser considerada cualquier otra distancia).
Se define entonces la distancia de Fermat para el par de puntos $\mathbf{p}, \mathbf{q} \in \mathcal{M}$ como:

$$
d_F(\mathbf{p}, \mathbf{q}) = \mathcal{D}_{\mathcal{S}_n}(\mathbf{p}, \mathbf{q}) = \min_{\mathcal{S}_n^K} \sum_{i = 1}^{K-1} l\left( \mathbf{x}^i, \mathbf{x}^{i+1} \right) ^\alpha
$$ {#eq-def-fermat}

Donde $\mathcal{S}_n^K$, $K \geq 2$, representa todas las secuencias de puntos compuestas por $K$ elementos tomados de $\mathcal{S}_n$ con
$$
\mathbf{x}^1 = \argmin_{\mathbf{x} \in \mathcal{S}_n} l\left( \mathbf{p} , \mathbf{x} \right)
$$ {#eq-def-fermat-x1}
$$
\mathbf{x}^K = \argmin_{\mathbf{x} \in \mathcal{S}_n} l\left( \mathbf{q} , \mathbf{x} \right)
$$ {#eq-def-fermat-xk}

La minimización se realiza sobre todos los valores posibles de $K$. Esta distancia captura por sí sola características topológicas del espacio [@PatuPercolationDistanceLearning], por lo que se espera que ayude a la posterior inferencia sobre el diagrama de persistencia construido.

Uno de los principales resultados de la distancia de Fermat es que si $\mathcal{S}_N$ es una muestra i.i.d, entonces sea $f: \mathcal{M} \longrightarrow \mathbb{R}$ una función de densidad desconocida con soporte en $\mathcal{M}$, entonces se demuestra en [@PatuFermatDistance] que

$$ \lim_{N \rightarrow \infty} N^{\alpha} \mathcal{D}_{\mathcal{S}_n}(\mathbf{p}, \mathbf{q}) = c_{d, D} \inf_{\Gamma \subset \mathcal{M}} \int_{\Gamma} \frac{1}{f^{\alpha}}$$

Es decir, la distancia de fermat es un estimador consistente de la distancia geodésica sobre $\mathcal{M}$ en la que los caminos se ponderan por el valor de la función de densidad. Esto significa que la distancia de fermat recupera tanto características de la topología del espacio $\mathcal{M}$ como de la función de distribución a partir de la cual se muestrea $\mathcal{S}_N$

### Aproximación por *k*-NN

Teniendo en cuenta que la carga computacional del cálculo de la distancia de Fermat es altamente elevado, siendo este $\mathcal{O}(N^3)$ para todas las distancias entre pares de un conjunto de $N$ puntos, una heurística sencilla para reducir este tiempo, sin perdida de garantías en cuanto a los resultados asintóticos, es tomar solo los $k$ vecinos más cercanos de $\mathbf{x}^i$ como posibles $\mathbf{x}^{i+1}$ durante la construcción de las secuencias $\mathcal{S}_n^K$ sobre las cuales se realiza la maximización.
Formalmente, si se define $\mathcal{N}_k(\mathbf{x})$ como el conjunto de $k$ vecinos más cercanos ($k$-NN) de $\mathbf{x}$, entonces la distancia de Fermat se define análogamente a la @eq-def-fermat pero siendo $\mathcal{S}_n^K$, $K \geq 2$ todas las secuencias posibles de puntos compuestos de $K$ elementos tomados de $\mathcal{S}_n$ tal que $\mathbf{x}^{i+1} \in \mathcal{N}_k(\mathbf{x}^i) \ \forall i$.

Con esta modificación, el cómputo de la distancia de fermat para todos los pares de un conjunto de $N$ puntos tiene una complejidad temporal asintótica de $\mathcal{O}(N^2 \log N)$, sumado a esto, es posible almacenar la matriz de distancia de forma mucho más eficiente, ya que la misma pasa de ser densa, con $N^2$ elementos distinto de cero, a ser rala contando con $N*k$ elementos no nulos, pudiéndose esto almacenar de forma mucho más eficiente.

### Aproximación por *Landmarks*

Otra mecanismo de aproximación para la distancia de fermat se obtiene a partir de la utilización de *landmarks* en el cálculo del camino más corto entre nodos dentro de un grafo. Teniendo en cuenta que el problema de encontrar la distancia de Fermat entre dos puntos puede verse como el problema análogo de encontrar el camino más corto entre dos nodos en el grafo en el que cada punto del conjunto representa un nodo y sus aristas están dadas por las distancias entre los respectivos puntos elevadas al factor $\alpha$, es decir, un grafo completo. A continuación se describe la técnica de *Landmarks* para el cálculo eficiente del camino más corto entre nodos de un grafo:

Sea un grafo $G(V,E)$ con $n$ vértices y $m$ aristas. Dados dos vértices $s, t \in V$, se define $d_G(s,t)$ como la longitud del camino más corto entre dos vértices $s, t \in V$.
Sea además un conjunto ordenado de $d$ vértices $D = \{u_1, u_2, . . . , u_d\}$ del grafo $G$, que llamamos *landmarks*. La idea principal es representar cada otro vértice en el grafo como un vector de distancias de camino más corto al conjunto de landmarks. En particular, cada vértice $v \in V$ se representa como un vector $\phi(v)$ en $\mathbb{R}^d$:

$$
\phi(v) = [ d_G(v, u_1), d_G(v, u_2), ..., d_G(v, u_d) ]^T = [ \phi_1(v), \phi_2(v), ..., \phi_d(v) ]^T
$$


Teniendo en cuenta que la distancia de camino más corto en grafos es una métrica y, por lo tanto, satisface la desigualdad triangular. Es decir, dados tres nodos $s, u$ y $t$, se cumplen las siguientes desigualdades:

$$|d_G(s, u) - d_G(u, t)| \leq d_G(s, t) \leq d_G(s, u) + d_G(u, t) $$ {#eq-landmark-bounds}

Resulta una observación importante que si $u$ pertenece al camino más corto de $s$ a $t$, entonces la cota superior se cumple con igualdad, es decir $d_G(s, t) = d_G(s, u) + d_G(u, t)$

Haciendo uso entonces de las representaciones $\phi(v)$ y $\phi(t)$ y mediante las desigualdades de la @eq-landmark-bounds podemos acotar $d_G(s,t)$ como

$$\max_i|\phi_i(s) - \phi_i(t)| \leq d_G(s,t) \leq \min_j\{\phi_j(s) + \phi_j(t)\}$$

Si se definen $L = \max_i|\phi_i(s) - \phi_i(t)|$ y $\min_j\{\phi_j(s) + \phi_j(t)\} = U$ podemos entonces estimar $d_G(s,t)$ como

- La estimación superior $\tilde{d}_G(s,t) = U$
- La estimación del punto medio $\tilde{d}_G(s,t) = \frac{L+U}{2}$
- La estimación de la media geométrica $\tilde{d}_G(s, t) = \sqrt{L \cdot U}$.

Nótese que en todos los casos, la estimación es muy rápida, ya que solo se necesitan $O(d)$. La cota superior $\tilde{d}_G(s,t) = U$ resulta la mejor estimación según la experimentación realizada en @FermatLandmarks. Adicionalmente, en @FermatLandmarks se muestra que la elección aleatoria de *landmarks* cuenta con buenas garantías frente a la elección óptima, siendo esta última un problema computacionalmente demasiado costoso.

### Implementación

La distancia de Fermat, tanto en su versión tradicional como en la aproximación por $k$ vecinos más cercanos y por *landmarks*, se encuentra implementada en GitHub para [*Python*](https://github.com/facusapienza21/Fermat-distance) y [*R*](https://github.com/diegobatt/fermat-distance), habiendo sido la librería para este último lenguaje construida especialmente para el desarrollo de esta Tesis.
